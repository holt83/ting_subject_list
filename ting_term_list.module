<?php

/**
 * @file
 *
 * Module file for the Ting subject list module.
 */

/* Constants */
define('TING_TERM_LIST_PATH', drupal_get_path('module', 'ting_term_list'));
define('TING_TERM_LIST_CACHE_LIFETIME', 604800); // 1 weeek.

/* Include file needed by features */
include_once 'ting_term_list.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function ting_term_list_ctools_plugin_directory($owner, $plugin_type) {
	if ($owner == 'ctools' && !empty($plugin_type)) {
		return "plugins/$plugin_type";
	}
}

/**
 * Implements hook_theme().
 */
function ting_term_list_theme() {
	return array(
		'ting_term_list' => array(
			'variables' => array(
				'terms' => array(),
				'column_count' => 3,
			),
			'template' => 'ting-term-list',
		),
		'ting_term_list_column' => array(
			'variables' => array(
				'terms' => array(),
			),
			'template' => 'ting-term-list-column',
		),
		'ting_term_list_term' => array(
			'variables' => array(
				'term' => NULL,
			),
			'template' => 'ting-term-list-term',
		),
	);
}

/**
 * Preprocess function for a term list.
 *
 * Sets up render array for each column and adds CSS. 
 */
function template_preprocess_ting_term_list(&$variables) {
	$terms = $variables['terms'];
	$column_count = $variables['column_count'];
	// Populate the columns of the list.
	$columns = _ting_term_list_populate_columns($terms, $column_count);
	$variables['columns'] = $columns;
	// Add CSS.
	_ting_term_list_add_css($column_count);
}

/**
 * Preprocess function for a column in the term list.
 *
 * Sets up render array for each term in the column.
 */
function template_preprocess_ting_term_list_column(&$variables) {
	$terms = $variables['terms'];
	$terms_render = array();
	foreach ($terms as $term_name => $material_count) {
		$terms_render[] = array(
			'#theme' => 'ting_term_list_term',
			'#term' => array(
			  'term_name' => $term_name,
			  'material_count' => $material_count,
			),
		);
	}
	$variables['terms'] = $terms_render;
}

/**
 * Preprocess function for a single term in the term list.
 */
function template_preprocess_ting_term_list_term(&$variables) {
	$term = $variables['term'];
	$variables['term_name'] = $term['term_name'];
	$variables['term_href'] = '/search/ting/' . $term['term_name'];
	$variables['material_count'] = $term['material_count']; 
}

/**
 * Populate the $terms in the specified number of columns.
 */
function _ting_term_list_populate_columns($terms, $column_count) {
	// The total term count for the list.
	$term_count = count($terms);
	// The term count for a column in the list.
	$column_term_count = (int)($term_count / $column_count);
	// If the number of terms doesn't fit equally in the columns we hava a rest.
	// The rest will be filled out in the left-most columns.
	$term_rest = $term_count % $column_count;
	$columns = array();
	$offset = 0;
	for ($i = 0; $i < $column_count; $i++) {
		$length = $column_term_count;
		// If we have a rest, put an extra term in this column.
		if ($term_rest > 0) {
			$length++; 	
			$term_rest--;
		}
		$column_terms = array_slice($terms, $offset, $length); 	
		$offset += $length;
		$columns[$i] = array(
			'#theme' => 'ting_term_list_column',
			'#terms' => $column_terms,
		);
	}
	return $columns;
}

/**
 * Adds the CSS for the term list.
 */
function _ting_term_list_add_css($column_count) {
	$column_width = (100 / $column_count) . '%';
	$css_options = array('group' => CSS_DEFAULT, 'type' => 'inline');
	$css = "div#ting-term-list div.ting-term-list-column { width: $column_width; }";
	drupal_add_css($css, $css_options);
	$css_options['type'] = 'file';
	drupal_add_css(TING_TERM_LIST_PATH . '/ting_term_list_style.css', $css_options);
}

/**
 * Fetch Ting material terms from the data well, using the facet search option 
 * on the OpenSearch webservice. 
 *
 * @param $node
 *   A node of type 'ting_term_list' with the settings for the term list.
 * @return
 *   An array of Ting material terms matching the query from the node.
 *   (term_name => material_count)
 */
function ting_term_list_get_terms($node) {
	// Check the cache first.
	$cache = cache_get('ting_term_list:' . $node->nid, 'cache_ting_term_list');
	if ($cache && ($cache->expire > REQUEST_TIME)) {
		$terms = $cache->data;
	}
	// Else fetch the terms from the data well and cache the result.	
	else {
		require_once drupal_get_path('module', 'ting') . '/ting.client.inc';
		// Get term list settings or apply default values if necessary.
		$term_query = ting_term_list_get_field_value($node, 'field_term_list_term_query');
		$term_query = ($term_query ? $term_query : 'bog');
 		$term_count = ting_term_list_get_field_value($node, 'field_term_list_term_count');
 		$term_count = ($term_count ? $term_count : 60);

		$request = ting_get_request_factory()->getSearchRequest();
		$request->setQuery($term_query);
		if ($agency = variable_get('ting_agency', FALSE)) {
			$request->setAgency($agency);
		}
		$profile = variable_get('ting_search_profile', '');
		if (!empty($profile) && method_exists($request, 'setProfile')) {
		  $request->setProfile($profile);
		}
		// Use facet.subject to get terms
		$request->setFacets(array('facet.subject'));
		// Set the number of subjects to return
		$request->setNumFacets($term_count);

		// Get the terms from search result object
		$search_result = ting_execute($request);
		$terms = array();
		if (isset($search_result->facets)) {
			$terms = $search_result->facets['facet.subject']->terms;
		}
		// Sort on term-name (key).
		ksort($terms);
		$cid = 'ting_term_list:' . $node->nid;
		$expiration_time = time() + TING_TERM_LIST_CACHE_LIFETIME;
		cache_set($cid, $terms, 'cache_ting_term_list', $expiration_time);		
	}
	return $terms;
}

/**
 * Gets the values from the specified field on the specified node.
 */
function ting_term_list_get_field_value($node, $field_name) {
	if (isset($node->{$field_name}) && !empty($node->{$field_name})) {
		$value = field_get_items('node', $node, $field_name);
		$value = array_shift(array_values($value));
		return $value['value'];
	}
	return FALSE;
}